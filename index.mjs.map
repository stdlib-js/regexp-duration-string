{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/regexp.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a duration string.\n*\n* ## Notes\n*\n* -   A duration string is a string containing a sequence of time units. A time unit is a nonnegative integer followed by a unit identifier. The following unit identifiers are supported:\n*\n*     -   `d`: days\n*     -   `h`: hours\n*     -   `m`: minutes\n*     -   `s`: seconds\n*     -   `ms`: milliseconds\n*\n*     For example, the string `1m3s10ms` is a duration string containing three time units: `1m` (1 minute), `3s` (3 seconds), and `10ms` (10 milliseconds). The string `60m` is a duration string containing a single time unit: `60m` (60 minutes). Time units must be supplied in descending order of magnitude (i.e., days, hours, minutes, seconds, milliseconds).\n*\n* -   Duration strings are case insensitive. For example, the string `1M3S10MS` is equivalent to `1m3s10ms`.\n*\n* -   The regular expression captures the following groups:\n*\n*     1.  The days component.\n*     2.  The hours component.\n*     3.  The minutes component.\n*     4.  The seconds component.\n*     5.  The milliseconds component.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DURATION = reDurationString();\n* // returns <RegExp>\n*/\nfunction reDurationString() {\n\treturn /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?(\\d+ms)?$/i;\n}\n\n\n// EXPORTS //\n\nexport default reDurationString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reDurationString from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Matches a duration string.\n*\n* Regular Expression: `/^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?(\\d+ms)?$/`\n*\n* -   `^`\n*     -   start of input\n*\n* -   `(\\d+d)?`\n*     -   capture a group of one or more digits followed by the literal character `d` for the number of days (optional)\n\n* -   `(\\d+h)?`\n*     -   capture a group of one or more digits followed by the literal character `h` for the number of hours (optional)\n\n* -   `(\\d+m)?`\n*     -   capture a group of one or more digits followed by the literal character `m` for the number of minutes (optional)\n\n* -   `(\\d+s)?`\n*     -   capture a group of one or more digits followed by the literal character `s` for the number of seconds (optional)\n\n* -   `(\\d+ms)?`\n*     -   capture a group of one or more digits followed by the literal character `ms` for the number of milliseconds (optional)\n*\n* -   `$`\n*     -   end of input\n*\n* @constant\n* @type {RegExp}\n* @default /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?(\\d+ms)?$/\n*/\nvar RE_DURATION = reDurationString();\n\n\n// EXPORTS //\n\nexport default RE_DURATION;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a duration string.\n*\n* @module @stdlib/regexp-duration-string\n*\n* @example\n* import reDurationString from '@stdlib/regexp-duration-string' ;\n*\n* var RE_DURATION = reDurationString();\n* // returns <RegExp>\n*\n* var parts = RE_DURATION.exec( '3d2ms' );\n* // returns [...]\n*\n* parts = RE_DURATION.exec( '2ms' );\n* // returns [...]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport REGEXP from './regexp.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["reDurationString","RE_DURATION","setReadOnly","main","REGEXP"],"mappings":";;iHAqDA,SAASA,IACR,MAAO,yCACR,CCEG,IAACC,EDHI,0CEPRC,EAAAC,EAAA,SAAAC"}